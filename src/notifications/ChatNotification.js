const { db } = require("../config/firebase");
const { findDevices } = require("./tool");

/**
 * G·ª≠i th√¥ng b√°o khi c√≥ tin nh·∫Øn m·ªõi
 * @param {string} senderId - ID ng∆∞·ªùi g·ª≠i
 * @param {string} receiverId - ID ng∆∞·ªùi nh·∫≠n
 * @param {string} message - N·ªôi dung tin nh·∫Øn
 * @param {string} type - Lo·∫°i tin nh·∫Øn (text, image, file)
 */
const sendChatNotification = async (senderId, receiverId, message, type = 'text') => {
    try {
        // L·∫•y th√¥ng tin ng∆∞·ªùi g·ª≠i
        const senderDoc = await db.collection('users').doc(senderId).get();
        if (!senderDoc.exists) return;

        const senderData = senderDoc.data();
        const senderName = senderData.name || senderData.email || 'Ng∆∞·ªùi d√πng';
        const senderAvatar = senderData.avatar || senderData.photoURL || '';

        // T·∫°o n·ªôi dung th√¥ng b√°o
        let notificationContent = message;
        if (type === 'image') {
            notificationContent = 'üì∑ ƒê√£ g·ª≠i m·ªôt h√¨nh ·∫£nh';
        } else if (type === 'file') {
            notificationContent = 'üìé ƒê√£ g·ª≠i m·ªôt file';
        }

        // T·∫°o th√¥ng b√°o trong Firestore
        const notify = {
            title: `Tin nh·∫Øn m·ªõi t·ª´ ${senderName}`,
            content: notificationContent,
            isRead: false,
            createdAt: new Date(),
            notificationType: 'Chat',
            senderId: senderId,
            senderName: senderName,
            senderAvatar: senderAvatar,
            messageType: type
        };

        await db.collection('notifications').add({
            ...notify,
            clientID: receiverId
        });

        // G·ª≠i FCM notification
        await findDevices(receiverId, notify);

    } catch (error) {
        console.error('Error sending chat notification:', error);
        // Kh√¥ng throw error ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn vi·ªác g·ª≠i tin nh·∫Øn
    }
};

module.exports = { sendChatNotification };
